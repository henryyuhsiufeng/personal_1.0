[{"/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/index.js":"1","/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/reportWebVitals.js":"2","/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/App.js":"3","/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/pages/Sandbox.js":"4","/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/pages/Landing.js":"5"},{"size":500,"mtime":1607744643113,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607744643114,"results":"8","hashOfConfig":"7"},{"size":438,"mtime":1607998870495,"results":"9","hashOfConfig":"7"},{"size":2333,"mtime":1608003046624,"results":"10","hashOfConfig":"7"},{"size":342,"mtime":1609530544333,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1b51p6l",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/index.js",[],["25","26"],"/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/reportWebVitals.js",[],"/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/App.js",["27"],"import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n// Pages\nimport Sandbox from \"./pages/Sandbox\";\nimport Landing from \"./pages/Landing\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/sandbox\">\n          <Sandbox />\n        </Route>\n        <Route path=\"/\">\n          <Landing />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/pages/Sandbox.js",["28","29","30","31"],"import * as React from \"react\";\nimport axios from \"axios\";\nimport \"./Sandbox.css\";\n\nconst { useEffect, useState } = React;\n\ninterface UserName {\n  first: string;\n  last: string;\n  title: string;\n}\n\ninterface UserPicture {\n  thumbnail: string;\n}\n\ninterface UserInfo {\n  name: {};\n  picture: UserPicture;\n}\n\nconst fetchRandomData = async (pageNumber) => {\n  return await axios\n    .get(`https://randomuser.me/api?page=${pageNumber}`)\n    .then(({ data }) => {\n      // console.log(data);\n      return data;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nconst getFullUserName = (userInfo: UserInfo) => {\n  const {\n    name: { first, last },\n  } = userInfo;\n  return `${first} ${last}`;\n};\n\nexport default function Sandbox() {\n  const [counter, setCounter] = useState(0);\n  const [nextPageNumber, setNextPageNumber] = useState(1);\n  const [userInfos, setUserInfos] = useState([]);\n  const [randomUserDataJSON, setRandomUserDataJSON] = useState(\"\");\n\n  const fetchNextUser = async () => {\n    async function fetchRandomUserData() {\n      const randomData = await fetchRandomData();\n      await setRandomUserDataJSON(\n        JSON.stringify(randomData, null, 2) || \"No user data found\"\n      );\n      if (randomData === undefined) return;\n      const newUserInfos = [...userInfos, ...randomData.results];\n      setUserInfos(newUserInfos);\n      setNextPageNumber(nextPageNumber + 1);\n    }\n    await fetchRandomUserData();\n  };\n\n  // on page load\n  useEffect(() => {\n    fetchNextUser();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>In Sandbox</h1>\n      <h2>The basics</h2>\n      <div>\n        {/*  */}\n        <h4>Basic Counter</h4>\n        <p>{counter}</p>\n        <button\n          onClick={() => {\n            setCounter(counter + 1);\n          }}\n        >\n          Increase Counter\n        </button>\n        {/*  */}\n        <h4>Basic API</h4>\n        <button\n          onClick={() => {\n            fetchNextUser();\n          }}\n        >\n          Fetch Next Random User\n        </button>\n        {userInfos.map((userInfo, idx) => (\n          <>\n            <p>{getFullUserName(userInfo)}</p>\n            <img src={userInfo.picture.thumbnail} />\n          </>\n        ))}\n        {/* <pre>{randomUserDataJSON}</pre> */}\n        {/*https://randomuser.me/api */}\n      </div>\n    </div>\n  );\n}\n","/Users/henryfeng/Desktop/MAIN/PROJECTS/WEB_PROJECTS/PERSONAL/my-app/src/pages/Landing.js",["32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":50,"nodeType":"39","messageId":"40","endLine":1,"endColumn":54},{"ruleId":"37","severity":1,"message":"41","line":7,"column":11,"nodeType":"39","messageId":"40","endLine":7,"endColumn":19},{"ruleId":"37","severity":1,"message":"42","line":45,"column":10,"nodeType":"39","messageId":"40","endLine":45,"endColumn":28},{"ruleId":"43","severity":1,"message":"44","line":64,"column":6,"nodeType":"45","endLine":64,"endColumn":8,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":93,"column":13,"nodeType":"49","endLine":93,"endColumn":53},{"ruleId":"47","severity":1,"message":"48","line":11,"column":11,"nodeType":"49","endLine":11,"endColumn":45},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'UserName' is defined but never used.","'randomUserDataJSON' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchNextUser'. Either include it or remove the dependency array.","ArrayExpression",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [fetchNextUser]",{"range":"55","text":"56"},[1506,1508],"[fetchNextUser]"]